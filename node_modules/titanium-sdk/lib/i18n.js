/**
 * Titanium SDK Library for Node.js
 * Copyright (c) 2012-2013 by Appcelerator, Inc. All Rights Reserved.
 * Please see the LICENSE file for information about licensing.
 */

var appc = require('node-appc'),
	__ = appc.i18n(__dirname).__,
	fs = require('fs'),
	path = require('path'),
	xml = appc.xml,
	DOMParser = require('xmldom').DOMParser;

exports.load = function (projectDir, logger, opts) {
	var i18nDir = path.join(projectDir, 'i18n'),
		data = {},
		ignoreDirs = opts && opts.ignoreDirs,
		ignoreFiles = opts && opts.ignoreFiles;

	if (fs.existsSync(i18nDir)) {
		logger.info(__('Compiling localization files'));
		fs.readdirSync(i18nDir).forEach(function (lang) {
			var langDir = path.join(i18nDir, lang),
				isDir = fs.statSync(langDir).isDirectory();

			if (fs.existsSync(langDir) && isDir && (!ignoreDirs || !ignoreDirs.test(lang))) {
				var s = data[lang] = {};

				fs.readdirSync(langDir).forEach(function (name) {
					var file = path.join(langDir, name);
					if (/.+\.xml$/.test(name) && (!ignoreFiles || !ignoreFiles.test(name)) && fs.existsSync(file) && fs.statSync(file).isFile()) {
						logger.debug(__('Processing i18n file: %s', (lang + '/' + name).cyan));

						var dest = name == 'app.xml' ? 'app' : 'strings',
							obj = s[dest] = s[dest] || {},
							dom = new DOMParser().parseFromString(fs.readFileSync(file).toString(), 'text/xml');

						xml.forEachElement(dom.documentElement, function (elem) {
							if (elem.nodeType == 1 && elem.tagName == 'string') {
								var name = xml.getAttr(elem, 'name');
								name && (obj[name] = elem && elem.firstChild && elem.firstChild.data || '');
							}
						});
					}
				});
			}
		});
	}

	return data;
};

exports.splashScreens = function (projectDir, logger, opts) {
	var i18nDir = path.join(projectDir, 'i18n'),
		data = [],
		ignoreDirs = opts && opts.ignoreDirs;

	if (fs.existsSync(i18nDir)) {
		logger.info(__('Checking for Splash Screen localization'));
		fs.readdirSync(i18nDir).forEach(function (lang) {
			var langDir = path.join(i18nDir, lang);
			if (fs.existsSync(langDir) && fs.statSync(langDir).isDirectory() && (!ignoreDirs || !ignoreDirs.test(lang))) {
				fs.readdirSync(langDir).forEach(function (name) {
					if(/^(Default(@2x|-568h@2x|-Landscape|-Landscape@2x|-Portrait|-Portriat@2x)?)\.png$/.test(name)) {
						data.push(path.join(langDir, name));
					}
				});
			}
		});
	}

	return data;
};