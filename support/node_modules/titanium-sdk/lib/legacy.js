/**
 * Titanium SDK Library for Node.js
 * Copyright (c) 2012 by Appcelerator, Inc. All Rights Reserved.
 * Please see the LICENSE file for information about licensing.
 */
var appc = require('node-appc'),
	path = require('path');

exports.constructLegacyCommand = function(cli, tiapp, platform, cmd, emulatorCmd) {
	cmd.push(path.join(path.resolve(cli.env.sdks[tiapp['sdk-version']].path), platform, 'builder.py'));
	
	switch (platform) {
		case 'iphone':
			switch (cli.argv.target) {
				case 'simulator':
					if (cli.argv['build-only']) {
						cmd.push('build', cli.argv['ios-version'], cli.argv['project-dir'], tiapp.id, tiapp.name, cli.argv['device-family'], cli.argv['sim-type'], cli.argv['debug-host']);
					} else {
						cmd.push('run', cli.argv['project-dir'], cli.argv['ios-version'], '', '', cli.argv['device-family'], cli.argv['sim-type'], cli.argv['debug-host']);
					}
					break;
				
				case 'device':
					cmd.push('install', cli.argv['ios-version'], cli.argv['project-dir'], tiapp.id, tiapp.name, cli.argv['pp-uuid'], cli.argv['developer-name'], cli.argv['device-family'], cli.argv.keychain, cli.argv['debug-host']);
					break;
					
				case 'dist-appstore':
					cmd.push('distribute', cli.argv['ios-version'], cli.argv['project-dir'], tiapp.id, tiapp.name, cli.argv['pp-uuid'], cli.argv['distribution-name'], '.', cli.argv['device-family'], cli.argv.keychain);
					break;
					
				case 'dist-adhoc':
					cmd.push('adhoc', cli.argv['ios-version'], cli.argv['project-dir'], tiapp.id, tiapp.name, cli.argv['pp-uuid'], cli.argv['distribution-name'], cli.argv['device-family'], cli.argv.keychain, cli.argv['debug-host']);
					break;
			}
			
			// trim off the empty trailing args
			while (!cmd[cmd.length-1]) {
				cmd.pop();
			}
			break;
		
		case 'mobileweb':
			cmd.push(cli.argv['project-dir'], cli.argv['deploy-type']);
			break;
			
		case 'android':
			if (cli.argv['build-only']) {
				cmd.push('build', tiapp.name, cli.argv['android-sdk'], cli.argv['project-dir'] , tiapp.id);
			} else {
				switch (cli.argv.target) {
					case 'emulator':
						emulatorCmd.push(cmd[0], 'emulator', tiapp.name, cli.argv['android-sdk'], cli.argv['project-dir'] , tiapp.id, cli.argv['avd-id'], cli.argv['avd-skin']);
						cmd.push('simulator', tiapp.name, cli.argv['android-sdk'], cli.argv['project-dir'] , tiapp.id, cli.argv['avd-id'], cli.argv['avd-skin']);
						break;
						
					case 'device':
						cmd.push('install', tiapp.name, cli.argv['android-sdk'], cli.argv['project-dir'] , tiapp.id, cli.argv['avd-id']);
						break;
					
					case 'dist-playstore':
						cmd.push('distribute', tiapp.name, cli.argv['android-sdk'], cli.argv['project-dir'] , tiapp.id, cli.argv['keystore'], cli.argv['password'], cli.argv['alias'], cli.argv['output-dir']);
						break;
				}
			}
			
			// Add debug host if it's defined
			if (cli.argv['debug-host']) {
				if (cli.argv.target == 'device') {
					cmd.push('');
				}
				cmd.push(cli.argv['debug-host']);
			}
			// Add profiler host if it's defined
			if (cli.argv['profiler-host']) {
				if (cli.argv.target == 'device') {
					cmd.push('');
				}
				cmd.push(cli.argv['profiler-host']);
				cmd.push('profiler');
			}
	}
}