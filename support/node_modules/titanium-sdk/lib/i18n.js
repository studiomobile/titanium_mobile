/**
 * Titanium SDK Library for Node.js
 * Copyright (c) 2012 by Appcelerator, Inc. All Rights Reserved.
 * Please see the LICENSE file for information about licensing.
 */

var ti = require('./titanium'),
	appc = require('node-appc'),
	i18n = appc.i18n(__dirname),
	__ = i18n.__,
	__n = i18n.__n,
	afs = appc.fs,
	xml = appc.xml,
	fs = require('fs'),
	path = require('path'),
	DOMParser = require('xmldom').DOMParser;

exports.load = function (projectDir, logger) {
	var i18nDir = path.join(projectDir, 'i18n'),
		data = {};
	
	if (afs.exists(i18nDir)) {
		logger.info(__('Compiling localization files'));
		fs.readdirSync(i18nDir).forEach(function (lang) {
			var langDir = path.join(i18nDir, lang);
			
			if (fs.lstatSync(langDir).isDirectory()) {
				var s = data[lang] = {};
				
				fs.readdirSync(langDir).forEach(function (file) {
					if (/.+\.xml$/.test(file)) {
						logger.debug(__('Processing i18n file: %s', (lang + '/' + file).cyan));
						
						var dest = file == 'app.xml' ? 'app' : 'strings',
							obj = s[dest] = s[dest] || {},
							dom = new DOMParser().parseFromString(fs.readFileSync(path.join(langDir, file)).toString(), 'text/xml');
						
						xml.forEachElement(dom.documentElement, function (elem) {
							if (elem.nodeType == 1 && elem.tagName == 'string') {
								var name = xml.getAttr(elem, 'name');
								name && (obj[name] = xml.getValue(elem));
							}
						});
					}
				});
			}
		});
	}
	
	return data;
};

exports.splashScreens = function (projectDir, logger) {
	var i18nDir = path.join(projectDir, 'i18n'),
		data = [];
	
	if (afs.exists(i18nDir)) {
		logger.info(__('Checking for Splash Screen localization'));
		fs.readdirSync(i18nDir).forEach(function (lang) {
			var langDir = path.join(i18nDir, lang);
			
			if (fs.lstatSync(langDir).isDirectory()) {
				fs.readdirSync(langDir).forEach(function (file) {
					if(/^(Default(@2x|-568h@2x|-Landscape|-Landscape@2x|-Portrait|-Portriat@2x)?)\.png$/.test(file)) {
						data.push(path.join(langDir, file));
					}
				});
			}
		});
	}
	
	return data;
};