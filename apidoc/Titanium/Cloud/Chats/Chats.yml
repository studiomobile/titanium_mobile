name: Titanium.Cloud.Chats
summary: Provides methods for accessing ACS chat messages.
extends: Titanium.Module
excludes: { methods: [ 'addEventListener', 'fireEvent', 'removeEventListener',  ] }

methods:
  - name: create
    summary: Send a chat message to another user or a group of users.
    description: |
        Requires user login. 
        
        See [Chats: Create a Chat Message](http://docs.appcelerator.com/cloud/latest/#!/api/Chats-method-create)
        for the request parameters supported by this method.
        
        Data is returned in the `chats` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
      
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudChatsResponse>

  - name: remove
    summary: Deletes a chat message.
    description: |
        Requires user login. 
        
        See [Chats: Delete a Chat Message](http://docs.appcelerator.com/cloud/latest/#!/api/Chats-method-delete)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
      
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudResponse>
    since: 3.2.0
  
  - name: getChatGroups
    summary: Retrieve a list of chat groups the current user belongs to.
    description: |
        Requires user login. 
        
        See [Chats: List Chat Groups](http://docs.appcelerator.com/cloud/latest/#!/api/Chats-method-get_chat_groups)
        for the request parameters supported by this method.
        
        Data is returned in the `chat_groups` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        optional: true
      
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudChatGroupsResponse>

  - name: queryChatGroups
    summary: Retrieve a list of chat groups with sorting and pagination.
    description: |
        Requires user login. 
        
        See [Chats: Query Chat Groups](http://docs.appcelerator.com/cloud/latest/#!/api/Chats-method-query_chat_groups)
        for the request parameters supported by this method.
        
        Data is returned in the `chat_groups` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        optional: true
      
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudChatGroupsResponse>
    since: 3.2.0
    
  - name: query
    summary: Retrieve a list of chat messages with sorting and pagination.
    description: |
        Requires user login. 
        
        See [Chats: Custom Query Chat Messages](http://docs.appcelerator.com/cloud/latest/#!/api/Chats-method-query)
        for the request parameters supported by this method.
        
        Data is returned in the `chats` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
      
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudChatsResponse>

examples:
  - title: Create Chat Message
    example: |
        This example sends a chat message to a list of users and checks the response.
        
            Cloud.Chats.create({
                to_ids: ids.join(','),
                message: 'Good morning'
            }, function (e) {
                if (e.success) {
                    for (var i = 0; i < e.chats.length; i++) {
                        var chat = e.chats[i];
                        alert('Success:\n' +
                            'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\n' +
                            'Updated: ' + chat.updated_at + '\n' +
                            'Message: ' + chat.message);
                    }
                } else {
                    alert('Error:\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
        
  - title: Query for Chat Message
    example: |
        This example requests a list of chat messages and checks the response.
        
            Cloud.Chats.query({
                participate_ids: ids.join(','),
                where: {
                    updated_at: { '$gt': last_update_time }
                }
            }, function (e) {
                if (e.success) {
                    for (var i = 0; i < e.chats.length; i++) {
                        var chat = e.chats[i];
                        alert('Success:\n' +
                            'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\n' +
                            'Updated: ' + chat.updated_at + '\n' +
                            'Message: ' + chat.message);
                    }
                } else {
                    alert('Error:\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Get Chat Groups
    example: |
        This example requests a lists of chat groups that the current user belongs to and checks 
        the response.
        
            Cloud.Chats.getChatGroups(function (e) {
                if (e.success) {
                    for (var i = 0; i < e.chats.length; i++) {
                        var group = e.chat_groups[i];
                        alert('Success:\n' +
                            'id: ' + group.id + '\n' +
                            'created_at: ' + group.created_at + '\n' +
                            'number of users: ' + group.participate_users.length);
                    }
                } else {
                    alert('Error:\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

---
name: CloudChatsResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: chats
    summary: Set of `chats` objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>

---
name: CloudChatGroupsResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: chat_groups
    summary: Set of `chat_groups` objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>
