name: Titanium.Cloud.GeoFences
summary: Provides methods for accessing ACS geo-fence objects.
description: |
    This feature is only available for **enterprise users**, and the current user must be an **application
    admin** to create, update or remove geo-fence objects.

    The ACS GeoFences API lets you manage geographic regions with an associated JSON data payload.
    Use this API to have the device query the ACS server to retrieve data based on a location.
extends: Titanium.Module
excludes: { methods: [ 'addEventListener', 'fireEvent', 'removeEventListener',  ] }
since: "3.2.1"

methods:
  - name: create
    summary: Create a new geofence object.
    description: |
        You must be an **enterprise application admin** to use this API.
        
        See [geo_fences/create.json](http://docs.appcelerator.com/cloud/latest/#!/api/GeoFences-method-create)
        for the request parameters supported by this method.
        
        Data is returned in the `geo_fences` property of the parameter passed to the callback.

    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudGeoFenceResponse>
  
  - name: query
    summary: Retrieve a list of places with sorting and pagination.
    description: |
        You must be an **enterprise application user** to use this API.

        See [geo_fences/query.json](http://docs.appcelerator.com/cloud/latest/#!/api/GeoFences-method-query)
        for the request parameters supported by this method.
        
        Data is returned in the `geo_fences` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        optional: true
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudGeoFenceResponse>
  
  - name: remove
    summary: Delete a place.
    description: |
        You must be an **enterprise application admin** to use this API.
        
        See [geo_fences/delete.json](http://docs.appcelerator.com/cloud/latest/#!/api/GeoFences-method-delete)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudGeoFenceResponse>
  
  - name: update
    summary: Update information about a place.
    description: |
        You must be an **enterprise application admin** to use this API.
        
        See [geo_fences/update.json](http://docs.appcelerator.com/cloud/latest/#!/api/GeoFences-method-update)
        for the request parameters supported by this method.
        
        Data is returned in the `geo_fences` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudGeoFenceResponse>

examples:

  - title: Create a geo-fence object
    example: |
        This example creates a new geo-fence object covering a 10 mile radius around San Francisco,
        CA, USA, and checks the response.

              Cloud.GeoFences.create({
                  geo_fence: {
                      "loc":{"coordinates":[-122.4167,37.7833], "radius":"10/3959"},
                      "payload":{"alert":"24-hour sale at our SF flagship store on 12/26!"},
                      "start_time": "2014-12-25T00:00",
                      "end_time":"2014-12-26T19:00"
                  }
              }, function (e) {
                  if (e.success) {
                      Ti.API.info(JSON.stringify(e.geo_fences));
                  } else {
                      alert('Error:\n' +
                          ((e.error && e.message) || JSON.stringify(e)));
                  }
              });


  - title: Query for geo-fence objects
    example: |
        This example searches for geo-fence objects within 2 km of Oakland, CA, USA, and checks the response.

              Cloud.GeoFences.query({
                  where:{
                      "loc": { 
                          "$nearSphere" : { 
                              "$geometry" : { "type" : "Point", "coordinates" : [-122.2708,37.8044] },
                                  "$maxDistance" : 2000
                              }
                          }
                  }
              }, function (e) {
                  if (e.success) {
                      Ti.API.info(JSON.stringify(e.geo_fences));
                  } else {
                      alert('Error:\n' +
                          ((e.error && e.message) || JSON.stringify(e)));
                  }
              });

    
  - title: Update a geo-fence object
    example: |
        This example updates a geo-fence object and checks the response.

            Cloud.GeoFences.update({
                id: geoFenceId,
                geo_fence:{"loc":{"place_id":"531a1217447d300f05003b69","radius":"2/6371"}}
            }, function (e) {
                if (e.success) {
                    Ti.API.info(JSON.stringify(e.geo_fences));
                } else {
                    alert('Error:\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Delete a geo-fence object
    example: |
        This example deletes a geo-fence object and checks the response.

            Cloud.GeoFences.remove({
                id: geoFenceId
            }, function (e) {
                if (e.success) {
                    Ti.API.info(JSON.stringify(e));
                } else {
                    alert('Error:\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

---
name: CloudGeoFenceResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: geo_fences
    summary: Set of geo-fence objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>
