---
name: Titanium.UI.iPhone.NavigationGroup
deprecated:
    since: "3.1.3"
    removed: "3.2.0"
    notes: |
        This class is now deprecated. Please use the <Titanium.UI.iOS.NavigationWindow> class instead.
summary: |
    A Navigation Group implements a specialized view that manages the navigation of hierarchical 
    content.
description: |
    The navigation group is created with the method <Titanium.UI.iPhone.createNavigationGroup>.
    
    ![navgroup](http://img.skitch.com/20100406-rwe44533tkd94fdnbqqudxynpe.png)
    
    The `window` property must be set initially in the constructor when creating a navigation group 
    to the root level window.  All navigation groups must have at least one root window that cannot 
    be removed.
platforms: [iphone, ipad]
extends: Titanium.UI.View
since: "1.2"
excludes: { methods:[removeAllChildren] }

properties:
  - name: window
    summary: Window to add to this navigation group.
    type: Titanium.UI.Window
    availability: creation
    optional: false

methods:
  - name: close
    summary: Closes a window and removes it from the navigation group.
    parameters:
      - name: window
        summary: Window to close.
        type: Titanium.UI.Window
        
      - name: options
        summary: |
            Options supporting a single `animated` boolean property to determine whether the window 
            will be animated (default) while being closed.
        type: Dictionary
        
  - name: open
    summary: Opens a window within the navigation group.
    parameters:
      - name: window
        summary: Window to open.
        type: Titanium.UI.Window
        
      - name: options
        summary: |
            Options supporting a single `animated` boolean property to determine whether the window 
            will be animated (default) while being closed.
        type: Dictionary

examples:
  - title: Simple Navigation Group
    example: |
        Creates a navigation group with the first window colored red.
        Press the button to open the blue window.
        Use the back button to return to the red root window.

            var win1 = Titanium.UI.createWindow();

            var win2 = Titanium.UI.createWindow({
                backgroundColor: 'red',
                title: 'Red Window'
            });

            var win3 = Titanium.UI.createWindow({
                backgroundColor: 'blue',
                title: 'Blue Window'
            });

            var button = Titanium.UI.createButton({
                title: 'Open Blue Window'
            });
            button.addEventListener('click', function(){
                nav.open(win3, {animated:true});
            });

            var nav = Titanium.UI.iPhone.createNavigationGroup({
               window: win2
            });

            win2.add(button);
            win1.add(nav);
            win1.open();

  - title: Alloy XML Markup
    example: |
        Previous example as two Alloy views.

        navgroup.xml:

            <Alloy>
                <Window>
                    <NavigationGroup id="nav" platform="ios">
                        <Window id="win2" title="Red Window" backgroundColor="red">
                            <Button title="Open Blue Window" onClick="openBlueWindow">
                        </Window>
                    </NavigationGroup>
                </Window>
            </Alloy>

        navgroup.js:

            function openBlueWindow(){
                var win3 = Alloy.createController('bluewindow').getView();
                $.nav.open(win3, {animated : true});
            }

        bluewindow.xml:

            <Alloy>
                <Window title="Blue Window" backgroundColor="blue" />
            </Alloy>

