---
name: Titanium.UI.Switch
summary: An on/off switch control.
description: |
    
    The appearance of a `Switch` control varies by platform: 

    * On Android, a Switch object can be styled either as a checkbox or 
    toggle button (see [Titanium.UI.Switch.style](Titanium.UI.Switch.style)). The checkbox style
    can optionally display a label next to the control.
    
    * On iOS, a Switch appears as an iOS on/off switch and doesn't have any text associated with it. 
    
    * On Mobile Web and Tizen, a switch always has text associated with it, and appears as a toggle button, 
    similar to Android.
    
    Use the <Titanium.UI.createSwitch> method or **`<Switch>`** Alloy element to create a switch.
extends: Titanium.UI.View
since: "0.8"
methods:

    # main doc inherited from Ti.UI.View.add
  - name: add
    description: |
        Adding children to a `Switch` is not supported on all platforms.

        If you need to display something on top of this object, consider using 
        another view as a container for both this object and views you want 
        to appear on top of it.

        See also: <Titanium.UI.View.add>.
    platforms: [mobileweb, tizen]

  - name: remove
    description: |
        See also: [add](Titanium.UI.Switch.add), <Titanium.UI.View.add>.
    platforms: [mobileweb, tizen]

properties:
  - name: color
    summary: Color to use for switch text, as a color name or hex triplet.
    description: For information about color values, see the "Colors" section of <Titanium.UI>. 
    type: String
    default: black
    platforms: [android, mobileweb, tizen]
    
  - name: enabled
    summary: Determines whether the switch is enabled.
    description: |
         Be careful not to confused this with the [value](Titanium.UI.Switch.value) property, which 
         is used to turn the switch on and off. 
         
         Set to `true` to enable or `false` to disable the switch.
    type: Boolean
    default: undefined (equivalent to enabled)
    
  - name: font
    summary: Font to use for the switch text.
    type: Font
    platforms: [android, mobileweb, tizen]
    
  - name: style
    summary: Style of the switch. Enables either the toggle button (default) or checkbox.
    type: Number
    constants: Titanium.UI.Android.SWITCH_STYLE_*
    platforms: [android]
    default: Titanium.UI.Android.SWITCH_STYLE_TOGGLEBUTTON
    
  - name: textAlign
    summary: |
        Horizontal text alignment of the switch title.
    description: |
        On Android, when the switch [style](Titanium.UI.Switch.style) property is set to 
        <Titanium.UI.Android.SWITCH_STYLE_CHECKBOX>, this property is only effective if the 
        [width](Titanium.UI.Switch.width) property is set to a value greater than the width of the 
        [title](Titanium.UI.Switch.title) contents. 
        
        On Mobile Web and Tizen this property is always supported, as the `style` property is not supported. 
    type: [String, Number]
    constants: Titanium.UI.TEXT_ALIGNMENT_*
    default: |
        <Titanium.UI.TEXT_ALIGNMENT_CENTER> (toggle button, Android), 
        <Titanium.UI.TEXT_ALIGNMENT_LEFT> (checkbox, Android), 
        <Titanium.UI.TEXT_ALIGNMENT_CENTER> (Mobile Web)
        <Titanium.UI.TEXT_ALIGNMENT_LEFT> (Tizen)
    platforms: [android, mobileweb, tizen]
    
  - name: title
    summary: Text to display next to the switch, when the checkbox style is in use.
    description: |
        This property is only effective when the <Titanium.UI.Switch.style> property is set to 
        <Titanium.UI.Android.SWITCH_STYLE_CHECKBOX>. 
        
        Use the [textAlign](Titanium.UI.Switch.textAlign) property to align this text within the 
        switch.
    type: String
    platforms: [android, mobileweb, tizen]
    
  - name: titleOff
    summary: Text to display on the switch in its "off" state, when the toggle button style is in use.
    description: |
        Set to an empty string to remove title text. 
        
        It is typically useful to set the `width` and/or `height` properties, to prevent the switch 
        changing size between its on/off state.
    type: String
    default: Off
    platforms: [android, mobileweb, tizen]
    
  - name: titleOn
    summary: Text to display on the switch in its "on" state, when the toggle button style is in use.
    description: |
        Set to an empty string to remove title text. 
        
        It is typically useful to set the `width` and/or `height` properties, to prevent the switch 
        changing size between its on/off state.
    type: String
    default: On
    platforms: [android, mobileweb, tizen]
    
  - name: tintColor
    summary: The color used to tint the outline of the switch when it is turned off.
    description: |
        This property is supported on iOS 6 and above unlike the [tintColor](Titanium.UI.View.tintColor) property defined on <Titanium.UI.View>.
    type: String
    default: Undefined.
    platforms: [iphone, ipad]
    since: "3.3.0"
    
  - name: onTintColor
    summary: The color used to tint the appearance of the switch when it is turned on.
    type: String
    default: Undefined.
    platforms: [iphone, ipad]
    since: "3.3.0"
    
  - name: thumbTintColor
    summary: The color used to tint the appearance of the thumb.
    type: String
    default: Undefined.
    platforms: [iphone, ipad]
    since: "3.3.0"
    
  - name: value
    summary: |
        Indicates whether the switch has been turned on or off by the user. May also be set 
        programmatically.
    description: |
        Set to `true` to turn on and `false` to turn off the switch. 
        
        On Android, if this property is not defined, the rendered state of the switch is off. 
        
        On iOS, be aware that this property must be set when the switch is rendered, otherwise it 
        will not be visible. This is a known issue. 
    type: Boolean
    default: undefined (visual state off, Android), false (Mobile Web and Tizen)
    
  - name: verticalAlign
    summary: Vertical alignment for the text field.
    type: [Number,String]
    constants: Titanium.UI.TEXT_VERTICAL_ALIGNMENT_*
    default: Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER
    platforms: [android, mobileweb, tizen]

events:
  - name: change
    summary: Fired when the switch value changes.
    properties:
      - name: value
        summary: New value of the switch.
        type: Boolean

examples:
  - title: Simple Switch Example
    example: |
        Create a standard switch, using default values, and output value property on each `change` 
        event.
        
            var win = Ti.UI.createWindow({
              backgroundColor: 'white'
            });
            
            var basicSwitch = Ti.UI.createSwitch({
              value:true // mandatory property for iOS 
            });
            win.add(basicSwitch);
            
            basicSwitch.addEventListener('change',function(e){
              Ti.API.info('Switch value: ' + basicSwitch.value);
            });
            
            win.open();
            
            // print initial value
            Ti.API.info('Switch value: ' + basicSwitch.value);
  - title: Toggle Button Switch Example (Android)
    example: |
        Create a standard (toggle button) switch with a customized title for each on/off state, and 
        output value property on each `change` event.
        
            var win = Ti.UI.createWindow({
              backgroundColor: 'white'
            });
            
            var basicSwitch = Ti.UI.createSwitch({
              titleOn:'Notifications Enabled',
              titleOff:'Notifications Disabled',
              value:true,
              width: 200, height:120
            });
            win.add(basicSwitch);
            
            basicSwitch.addEventListener('change',function(e){
              Ti.API.info('Switch value: ' + basicSwitch.value);
            });
            
            win.open();
  - title: Checkbox Switch Example (Android)
    example: |
        Create a checkbox switch, and output value property on each `change` event.
        
            var win = Ti.UI.createWindow({
              backgroundColor: 'white'
            });
            
            var basicSwitch = Ti.UI.createSwitch({
              style: Ti.UI.Android.SWITCH_STYLE_CHECKBOX,
              textAlign:Ti.UI.TEXT_ALIGNMENT_CENTER,
              title:'Notifications',
              value:true,
              width: 300 // necessary for textAlign to be effective
            });
            win.add(basicSwitch);
            
            basicSwitch.addEventListener('change',function(e){
              Ti.API.info('Switch value: ' + basicSwitch.value);
            });
            
            win.open();

  - title: Alloy XML Markup
    example: |
        Previous simple switch example as an Alloy view.

        switchexample.xml:

            <Alloy>
                <Window id="win" backgroundColor="white">
                    <Switch id="basicSwitch" value="true" onChange="outputState"/>
                </Window>
            </Alloy>

        switchexample.js:

            function outputState(){
                Ti.API.info('Switch value: ' + $.basicSwitch.value);
            }
